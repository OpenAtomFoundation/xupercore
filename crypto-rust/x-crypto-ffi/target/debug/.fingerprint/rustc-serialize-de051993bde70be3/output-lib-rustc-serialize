{"future_incompat_report":[{"diagnostic":{"message":"impl method assumes more implied bounds than the corresponding trait method","code":{"code":"implied_bounds_entailment","explanation":null},"level":"warning","spans":[{"file_name":"/Users/liminglei02/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.24/src/serialize.rs","byte_start":41118,"byte_end":41151,"line_start":1155,"line_end":1155,"column_start":41,"column_end":74,"is_primary":true,"text":[{"text":"    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {","highlight_start":41,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(implied_bounds_entailment)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"replace this type to make the impl signature compatible","code":null,"level":"help","spans":[{"file_name":"/Users/liminglei02/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.24/src/serialize.rs","byte_start":41118,"byte_end":41151,"line_start":1155,"line_end":1155,"column_start":41,"column_end":74,"is_primary":true,"text":[{"text":"    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {","highlight_start":41,"highlight_end":74}],"label":null,"suggested_replacement":"Result<Cow<'a, T>, <D as serialize::Decoder>::Error>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: impl method assumes more implied bounds than the corresponding trait method\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/liminglei02/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rustc-serialize-0.3.24/src/serialize.rs:1155:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn decode<D: Decoder>(d: &mut D) -> Result<Cow<'static, T>, D::Error> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace this type to make the impl signature compatible: `Result<Cow<'a, T>, <D as serialize::Decoder>::Error>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #105572 <https://github.com/rust-lang/rust/issues/105572>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(implied_bounds_entailment)]` on by default\u001b[0m\n\n"}}]}
