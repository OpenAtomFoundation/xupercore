syntax = "proto3";

option go_package = "github.com/xuperchain/xupercore/protos";

import "xupercore/protos/ledger.proto";

package protos;

enum ResourceType {
    CPU = 0;
    MEMORY = 1;
    DISK = 2;
    // the fee used in kernel contract
    XFEE = 3;
}

message GasPrice {
    int64 cpu_rate = 1;
    int64 mem_rate = 2;
    int64 disk_rate = 3;
    int64 xfee_rate = 4;
}

message ResourceLimit {
    ResourceType type = 1;
    int64 limit = 2;
}

// 预执行的请求结构
message InvokeRequest {
    string module_name = 1;
    string contract_name = 2;
    string method_name = 3;
    map<string, bytes> args = 4;
    repeated ResourceLimit resource_limits = 5;
    // amount is the amount transfer to the contract
    // attention: In one transaction, transfer to only one contract is allowed
    string amount = 6;
}

// 预执行的返回结构
message InvokeResponse {
    repeated TxInputExt inputs = 1;
    repeated TxOutputExt outputs = 2;
    repeated bytes response = 3;
    int64 gas_used = 4;
    repeated InvokeRequest requests = 5;
    repeated ContractResponse responses = 6;
    repeated TxInput utxoInputs = 7;
    repeated TxOutput utxoOutputs = 8;
}

// ContractResponse is the response returnd by contract
message ContractResponse {
    int32 status = 1;
    string message = 2;
    bytes body = 3;
}

message WasmCodeDesc {
    string runtime = 1;
    string compiler = 2;
    bytes digest = 3;
    string vm_compiler = 4;
    string contract_type = 5;
}

message ContractEvent {
    string contract = 1;
    string name = 2;
    bytes body = 3;
}

message ContractStatData {
    int64 accountCount = 1;
    int64 contractCount = 2;
}

// Status of a contract
message ContractStatus {
    string contract_name = 1;
    string txid = 2;
    bytes desc = 3;
    bool is_banned = 4;
    int64 timestamp = 5;
    string runtime = 6;
}

