// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/network.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type XuperMessage_MessageType int32

const (
	XuperMessage_SENDBLOCK                XuperMessage_MessageType = 0
	XuperMessage_POSTTX                   XuperMessage_MessageType = 1
	XuperMessage_BATCHPOSTTX              XuperMessage_MessageType = 2
	XuperMessage_GET_BLOCK                XuperMessage_MessageType = 3
	XuperMessage_PING                     XuperMessage_MessageType = 4
	XuperMessage_GET_BLOCKCHAINSTATUS     XuperMessage_MessageType = 5
	XuperMessage_GET_BLOCK_RES            XuperMessage_MessageType = 6
	XuperMessage_GET_BLOCKCHAINSTATUS_RES XuperMessage_MessageType = 7
	// 向邻近确认区块是否为最新状态区块
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS     XuperMessage_MessageType = 8
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS_RES XuperMessage_MessageType = 9
	XuperMessage_MSG_TYPE_NONE                XuperMessage_MessageType = 10
	// query RPC port information
	XuperMessage_GET_RPC_PORT     XuperMessage_MessageType = 11
	XuperMessage_GET_RPC_PORT_RES XuperMessage_MessageType = 12
	// get authentication information
	XuperMessage_GET_AUTHENTICATION     XuperMessage_MessageType = 13
	XuperMessage_GET_AUTHENTICATION_RES XuperMessage_MessageType = 14
	// chained-bft NEW_VIEW message
	XuperMessage_CHAINED_BFT_NEW_VIEW_MSG XuperMessage_MessageType = 15
	// chained-bft NEW_PROPOSAL message
	XuperMessage_CHAINED_BFT_NEW_PROPOSAL_MSG XuperMessage_MessageType = 16
	// chained-bft vote message
	XuperMessage_CHAINED_BFT_VOTE_MSG XuperMessage_MessageType = 17
	// broadcast new block id to other node
	XuperMessage_NEW_BLOCKID XuperMessage_MessageType = 18
	// new node used to add to network automatic
	XuperMessage_NEW_NODE XuperMessage_MessageType = 19
	// 消息头同步对(GET_HASHES <-> HASHES),
	// 发送方通过GET_HASHES消息询问区间范围内的所有区块哈希信息,
	// 接受方发送HASHES信息, 该消息携带其所知的区间范围内的BlockId列表
	XuperMessage_GET_BLOCKIDS     XuperMessage_MessageType = 20
	XuperMessage_GET_BLOCKIDS_RES XuperMessage_MessageType = 21
	// 消息对(GET_BLOCKS <-> BLOCKS),
	// 发送方通过GET_BLOCKS消息询问BlockId列表内的所有对应区块信息,
	// 接受方发送BLOCKS信息, 该消息携带具体Block
	XuperMessage_GET_BLOCKS             XuperMessage_MessageType = 22
	XuperMessage_GET_BLOCKS_RES         XuperMessage_MessageType = 23
	XuperMessage_GET_PEER_INFO          XuperMessage_MessageType = 24
	XuperMessage_GET_PEER_INFO_RES      XuperMessage_MessageType = 25
	XuperMessage_GET_BLOCK_HEADERS      XuperMessage_MessageType = 26
	XuperMessage_GET_BLOCKS_HEADERS_RES XuperMessage_MessageType = 27
	XuperMessage_GET_BLOCK_TXS          XuperMessage_MessageType = 28
	XuperMessage_GET_BLOCKS_TXS_RES     XuperMessage_MessageType = 29
)

var XuperMessage_MessageType_name = map[int32]string{
	0:  "SENDBLOCK",
	1:  "POSTTX",
	2:  "BATCHPOSTTX",
	3:  "GET_BLOCK",
	4:  "PING",
	5:  "GET_BLOCKCHAINSTATUS",
	6:  "GET_BLOCK_RES",
	7:  "GET_BLOCKCHAINSTATUS_RES",
	8:  "CONFIRM_BLOCKCHAINSTATUS",
	9:  "CONFIRM_BLOCKCHAINSTATUS_RES",
	10: "MSG_TYPE_NONE",
	11: "GET_RPC_PORT",
	12: "GET_RPC_PORT_RES",
	13: "GET_AUTHENTICATION",
	14: "GET_AUTHENTICATION_RES",
	15: "CHAINED_BFT_NEW_VIEW_MSG",
	16: "CHAINED_BFT_NEW_PROPOSAL_MSG",
	17: "CHAINED_BFT_VOTE_MSG",
	18: "NEW_BLOCKID",
	19: "NEW_NODE",
	20: "GET_BLOCKIDS",
	21: "GET_BLOCKIDS_RES",
	22: "GET_BLOCKS",
	23: "GET_BLOCKS_RES",
	24: "GET_PEER_INFO",
	25: "GET_PEER_INFO_RES",
	26: "GET_BLOCK_HEADERS",
	27: "GET_BLOCKS_HEADERS_RES",
	28: "GET_BLOCK_TXS",
	29: "GET_BLOCKS_TXS_RES",
}

var XuperMessage_MessageType_value = map[string]int32{
	"SENDBLOCK":                    0,
	"POSTTX":                       1,
	"BATCHPOSTTX":                  2,
	"GET_BLOCK":                    3,
	"PING":                         4,
	"GET_BLOCKCHAINSTATUS":         5,
	"GET_BLOCK_RES":                6,
	"GET_BLOCKCHAINSTATUS_RES":     7,
	"CONFIRM_BLOCKCHAINSTATUS":     8,
	"CONFIRM_BLOCKCHAINSTATUS_RES": 9,
	"MSG_TYPE_NONE":                10,
	"GET_RPC_PORT":                 11,
	"GET_RPC_PORT_RES":             12,
	"GET_AUTHENTICATION":           13,
	"GET_AUTHENTICATION_RES":       14,
	"CHAINED_BFT_NEW_VIEW_MSG":     15,
	"CHAINED_BFT_NEW_PROPOSAL_MSG": 16,
	"CHAINED_BFT_VOTE_MSG":         17,
	"NEW_BLOCKID":                  18,
	"NEW_NODE":                     19,
	"GET_BLOCKIDS":                 20,
	"GET_BLOCKIDS_RES":             21,
	"GET_BLOCKS":                   22,
	"GET_BLOCKS_RES":               23,
	"GET_PEER_INFO":                24,
	"GET_PEER_INFO_RES":            25,
	"GET_BLOCK_HEADERS":            26,
	"GET_BLOCKS_HEADERS_RES":       27,
	"GET_BLOCK_TXS":                28,
	"GET_BLOCKS_TXS_RES":           29,
}

func (x XuperMessage_MessageType) String() string {
	return proto.EnumName(XuperMessage_MessageType_name, int32(x))
}

func (XuperMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{0, 0}
}

type XuperMessage_ErrorType int32

const (
	// success
	XuperMessage_SUCCESS XuperMessage_ErrorType = 0
	XuperMessage_NONE    XuperMessage_ErrorType = 1
	// common error
	XuperMessage_UNKNOW_ERROR             XuperMessage_ErrorType = 2
	XuperMessage_CHECK_SUM_ERROR          XuperMessage_ErrorType = 3
	XuperMessage_UNMARSHAL_MSG_BODY_ERROR XuperMessage_ErrorType = 4
	XuperMessage_CONNECT_REFUSE           XuperMessage_ErrorType = 5
	// block error
	XuperMessage_GET_BLOCKCHAIN_ERROR           XuperMessage_ErrorType = 6
	XuperMessage_BLOCKCHAIN_NOTEXIST            XuperMessage_ErrorType = 7
	XuperMessage_GET_BLOCK_ERROR                XuperMessage_ErrorType = 8
	XuperMessage_CONFIRM_BLOCKCHAINSTATUS_ERROR XuperMessage_ErrorType = 9
	XuperMessage_GET_AUTHENTICATION_ERROR       XuperMessage_ErrorType = 10
	XuperMessage_GET_AUTHENTICATION_NOT_PASS    XuperMessage_ErrorType = 11
)

var XuperMessage_ErrorType_name = map[int32]string{
	0:  "SUCCESS",
	1:  "NONE",
	2:  "UNKNOW_ERROR",
	3:  "CHECK_SUM_ERROR",
	4:  "UNMARSHAL_MSG_BODY_ERROR",
	5:  "CONNECT_REFUSE",
	6:  "GET_BLOCKCHAIN_ERROR",
	7:  "BLOCKCHAIN_NOTEXIST",
	8:  "GET_BLOCK_ERROR",
	9:  "CONFIRM_BLOCKCHAINSTATUS_ERROR",
	10: "GET_AUTHENTICATION_ERROR",
	11: "GET_AUTHENTICATION_NOT_PASS",
}

var XuperMessage_ErrorType_value = map[string]int32{
	"SUCCESS":                        0,
	"NONE":                           1,
	"UNKNOW_ERROR":                   2,
	"CHECK_SUM_ERROR":                3,
	"UNMARSHAL_MSG_BODY_ERROR":       4,
	"CONNECT_REFUSE":                 5,
	"GET_BLOCKCHAIN_ERROR":           6,
	"BLOCKCHAIN_NOTEXIST":            7,
	"GET_BLOCK_ERROR":                8,
	"CONFIRM_BLOCKCHAINSTATUS_ERROR": 9,
	"GET_AUTHENTICATION_ERROR":       10,
	"GET_AUTHENTICATION_NOT_PASS":    11,
}

func (x XuperMessage_ErrorType) String() string {
	return proto.EnumName(XuperMessage_ErrorType_name, int32(x))
}

func (XuperMessage_ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{0, 1}
}

// XuperMessage is the message of Xuper p2p server
type XuperMessage struct {
	Header               *XuperMessage_MessageHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Data                 *XuperMessage_MessageData   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *XuperMessage) Reset()         { *m = XuperMessage{} }
func (m *XuperMessage) String() string { return proto.CompactTextString(m) }
func (*XuperMessage) ProtoMessage()    {}
func (*XuperMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{0}
}

func (m *XuperMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XuperMessage.Unmarshal(m, b)
}
func (m *XuperMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XuperMessage.Marshal(b, m, deterministic)
}
func (m *XuperMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XuperMessage.Merge(m, src)
}
func (m *XuperMessage) XXX_Size() int {
	return xxx_messageInfo_XuperMessage.Size(m)
}
func (m *XuperMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_XuperMessage.DiscardUnknown(m)
}

var xxx_messageInfo_XuperMessage proto.InternalMessageInfo

func (m *XuperMessage) GetHeader() *XuperMessage_MessageHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *XuperMessage) GetData() *XuperMessage_MessageData {
	if m != nil {
		return m.Data
	}
	return nil
}

// MessageHeader is the message header of Xuper p2p server
type XuperMessage_MessageHeader struct {
	Version              string                   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Logid                string                   `protobuf:"bytes,2,opt,name=logid,proto3" json:"logid,omitempty"`
	From                 string                   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Bcname               string                   `protobuf:"bytes,4,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Type                 XuperMessage_MessageType `protobuf:"varint,5,opt,name=type,proto3,enum=protos.XuperMessage_MessageType" json:"type,omitempty"`
	DataCheckSum         uint32                   `protobuf:"varint,6,opt,name=dataCheckSum,proto3" json:"dataCheckSum,omitempty"`
	ErrorType            XuperMessage_ErrorType   `protobuf:"varint,7,opt,name=errorType,proto3,enum=protos.XuperMessage_ErrorType" json:"errorType,omitempty"`
	EnableCompress       bool                     `protobuf:"varint,8,opt,name=enableCompress,proto3" json:"enableCompress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *XuperMessage_MessageHeader) Reset()         { *m = XuperMessage_MessageHeader{} }
func (m *XuperMessage_MessageHeader) String() string { return proto.CompactTextString(m) }
func (*XuperMessage_MessageHeader) ProtoMessage()    {}
func (*XuperMessage_MessageHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{0, 0}
}

func (m *XuperMessage_MessageHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XuperMessage_MessageHeader.Unmarshal(m, b)
}
func (m *XuperMessage_MessageHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XuperMessage_MessageHeader.Marshal(b, m, deterministic)
}
func (m *XuperMessage_MessageHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XuperMessage_MessageHeader.Merge(m, src)
}
func (m *XuperMessage_MessageHeader) XXX_Size() int {
	return xxx_messageInfo_XuperMessage_MessageHeader.Size(m)
}
func (m *XuperMessage_MessageHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_XuperMessage_MessageHeader.DiscardUnknown(m)
}

var xxx_messageInfo_XuperMessage_MessageHeader proto.InternalMessageInfo

func (m *XuperMessage_MessageHeader) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *XuperMessage_MessageHeader) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

func (m *XuperMessage_MessageHeader) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *XuperMessage_MessageHeader) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *XuperMessage_MessageHeader) GetType() XuperMessage_MessageType {
	if m != nil {
		return m.Type
	}
	return XuperMessage_SENDBLOCK
}

func (m *XuperMessage_MessageHeader) GetDataCheckSum() uint32 {
	if m != nil {
		return m.DataCheckSum
	}
	return 0
}

func (m *XuperMessage_MessageHeader) GetErrorType() XuperMessage_ErrorType {
	if m != nil {
		return m.ErrorType
	}
	return XuperMessage_SUCCESS
}

func (m *XuperMessage_MessageHeader) GetEnableCompress() bool {
	if m != nil {
		return m.EnableCompress
	}
	return false
}

// MessageData is the message data of Xuper p2p server
type XuperMessage_MessageData struct {
	// msgInfo is the message infomation, use protobuf coding style
	MsgInfo              []byte   `protobuf:"bytes,3,opt,name=msgInfo,proto3" json:"msgInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XuperMessage_MessageData) Reset()         { *m = XuperMessage_MessageData{} }
func (m *XuperMessage_MessageData) String() string { return proto.CompactTextString(m) }
func (*XuperMessage_MessageData) ProtoMessage()    {}
func (*XuperMessage_MessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{0, 1}
}

func (m *XuperMessage_MessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XuperMessage_MessageData.Unmarshal(m, b)
}
func (m *XuperMessage_MessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XuperMessage_MessageData.Marshal(b, m, deterministic)
}
func (m *XuperMessage_MessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XuperMessage_MessageData.Merge(m, src)
}
func (m *XuperMessage_MessageData) XXX_Size() int {
	return xxx_messageInfo_XuperMessage_MessageData.Size(m)
}
func (m *XuperMessage_MessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_XuperMessage_MessageData.DiscardUnknown(m)
}

var xxx_messageInfo_XuperMessage_MessageData proto.InternalMessageInfo

func (m *XuperMessage_MessageData) GetMsgInfo() []byte {
	if m != nil {
		return m.MsgInfo
	}
	return nil
}

type PeerInfo struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string      `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Account              string      `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Peer                 []*PeerInfo `protobuf:"bytes,4,rep,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9898f5d59e04eeea, []int{1}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PeerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PeerInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PeerInfo) GetPeer() []*PeerInfo {
	if m != nil {
		return m.Peer
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.XuperMessage_MessageType", XuperMessage_MessageType_name, XuperMessage_MessageType_value)
	proto.RegisterEnum("protos.XuperMessage_ErrorType", XuperMessage_ErrorType_name, XuperMessage_ErrorType_value)
	proto.RegisterType((*XuperMessage)(nil), "protos.XuperMessage")
	proto.RegisterType((*XuperMessage_MessageHeader)(nil), "protos.XuperMessage.MessageHeader")
	proto.RegisterType((*XuperMessage_MessageData)(nil), "protos.XuperMessage.MessageData")
	proto.RegisterType((*PeerInfo)(nil), "protos.PeerInfo")
}

func init() { proto.RegisterFile("protos/network.proto", fileDescriptor_9898f5d59e04eeea) }

var fileDescriptor_9898f5d59e04eeea = []byte{
	// 865 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xcd, 0x73, 0x1a, 0x37,
	0x14, 0x37, 0x18, 0xf3, 0xf1, 0xf8, 0xb0, 0xfc, 0x4c, 0x9c, 0x2d, 0x71, 0x53, 0x86, 0xe9, 0xa4,
	0x9c, 0xec, 0x0e, 0xed, 0xa9, 0xd3, 0x0b, 0x2c, 0xb2, 0xd9, 0x71, 0xd0, 0xee, 0x48, 0x22, 0x26,
	0xbd, 0xec, 0xac, 0x41, 0xb1, 0x99, 0x04, 0x96, 0x59, 0x70, 0xda, 0xfc, 0x29, 0x9d, 0xe9, 0xb9,
	0x97, 0xfe, 0x93, 0x1d, 0x69, 0x77, 0x31, 0xb6, 0x49, 0x4e, 0xf0, 0x7e, 0x1f, 0xd2, 0x7b, 0x4f,
	0xd2, 0x5b, 0xa8, 0x2f, 0xa3, 0x70, 0x1d, 0xae, 0xce, 0x17, 0x6a, 0xfd, 0x67, 0x18, 0x7d, 0x3c,
	0x33, 0x21, 0xe6, 0x63, 0xb4, 0xf5, 0x4f, 0x19, 0x2a, 0xe3, 0xfb, 0xa5, 0x8a, 0x86, 0x6a, 0xb5,
	0x0a, 0x6e, 0x15, 0xfe, 0x06, 0xf9, 0x81, 0x0a, 0xa6, 0x2a, 0xb2, 0x32, 0xcd, 0x4c, 0xbb, 0xdc,
	0x69, 0xc5, 0x86, 0xd5, 0xd9, 0xb6, 0xea, 0x2c, 0xf9, 0x8d, 0x95, 0x3c, 0x71, 0xe0, 0xaf, 0x90,
	0xeb, 0x07, 0xeb, 0xc0, 0xca, 0x1a, 0x67, 0xf3, 0x5b, 0x4e, 0xad, 0xe3, 0x46, 0xdd, 0xf8, 0x2f,
	0x0b, 0xd5, 0x47, 0xeb, 0xa1, 0x05, 0x85, 0xcf, 0x2a, 0x5a, 0xcd, 0xc2, 0x85, 0x49, 0xa2, 0xc4,
	0xd3, 0x10, 0xeb, 0x70, 0xf0, 0x29, 0xbc, 0x9d, 0x4d, 0xcd, 0x16, 0x25, 0x1e, 0x07, 0x88, 0x90,
	0xfb, 0x10, 0x85, 0x73, 0x6b, 0xdf, 0x80, 0xe6, 0x3f, 0x9e, 0x40, 0xfe, 0x66, 0xb2, 0x08, 0xe6,
	0xca, 0xca, 0x19, 0x34, 0x89, 0x74, 0x8e, 0xeb, 0x2f, 0x4b, 0x65, 0x1d, 0x34, 0x33, 0xed, 0xda,
	0xb7, 0x73, 0x94, 0x5f, 0x96, 0x8a, 0x1b, 0x35, 0xb6, 0xa0, 0x32, 0x0d, 0xd6, 0x81, 0x7d, 0xa7,
	0x26, 0x1f, 0xc5, 0xfd, 0xdc, 0xca, 0x37, 0x33, 0xed, 0x2a, 0x7f, 0x84, 0xe1, 0xef, 0x50, 0x52,
	0x51, 0x14, 0x46, 0xda, 0x66, 0x15, 0xcc, 0xf2, 0xaf, 0x77, 0x2e, 0x4f, 0x53, 0x15, 0x7f, 0x30,
	0xe0, 0x1b, 0xa8, 0xa9, 0x45, 0x70, 0xf3, 0x49, 0xd9, 0xe1, 0x7c, 0x19, 0xa9, 0xd5, 0xca, 0x2a,
	0x36, 0x33, 0xed, 0x22, 0x7f, 0x82, 0x36, 0x7e, 0x82, 0xf2, 0x56, 0x0b, 0x75, 0xab, 0xe6, 0xab,
	0x5b, 0x67, 0xf1, 0x21, 0x34, 0xd5, 0x57, 0x78, 0x1a, 0xb6, 0xfe, 0x3e, 0xd8, 0x28, 0xcd, 0x06,
	0x55, 0x28, 0x09, 0xca, 0xfa, 0xbd, 0xb7, 0xae, 0x7d, 0x45, 0xf6, 0x10, 0x20, 0xef, 0xb9, 0x42,
	0xca, 0x31, 0xc9, 0xe0, 0x21, 0x94, 0x7b, 0x5d, 0x69, 0x0f, 0x12, 0x20, 0xab, 0xb5, 0x97, 0x54,
	0xfa, 0xb1, 0x76, 0x1f, 0x8b, 0x90, 0xf3, 0x1c, 0x76, 0x49, 0x72, 0x68, 0x41, 0x7d, 0x43, 0xd8,
	0x83, 0xae, 0xc3, 0x84, 0xec, 0xca, 0x91, 0x20, 0x07, 0x78, 0x04, 0xd5, 0x0d, 0xe3, 0x73, 0x2a,
	0x48, 0x1e, 0x4f, 0xc1, 0xda, 0x25, 0x36, 0x6c, 0x41, 0xb3, 0xb6, 0xcb, 0x2e, 0x1c, 0x3e, 0x7c,
	0xbe, 0x5c, 0x11, 0x9b, 0x70, 0xfa, 0x35, 0xd6, 0xf8, 0x4b, 0x7a, 0xc3, 0xa1, 0xb8, 0xf4, 0xe5,
	0x7b, 0x8f, 0xfa, 0xcc, 0x65, 0x94, 0x00, 0x12, 0xa8, 0xe8, 0x0d, 0xb9, 0x67, 0xfb, 0x9e, 0xcb,
	0x25, 0x29, 0x63, 0x1d, 0xc8, 0x36, 0x62, 0xac, 0x15, 0x3c, 0x01, 0xd4, 0x68, 0x77, 0x24, 0x07,
	0x94, 0x49, 0xc7, 0xee, 0x4a, 0xc7, 0x65, 0xa4, 0x8a, 0x0d, 0x38, 0x79, 0x8e, 0x1b, 0x4f, 0xcd,
	0xa4, 0xab, 0x73, 0xa0, 0x7d, 0xbf, 0x77, 0x21, 0x7d, 0x46, 0xaf, 0xfd, 0x77, 0x0e, 0xbd, 0xf6,
	0x87, 0xe2, 0x92, 0x1c, 0x9a, 0x74, 0x9f, 0xb0, 0x1e, 0x77, 0x3d, 0x57, 0x74, 0xdf, 0x1a, 0x05,
	0xd1, 0x9d, 0xdb, 0x56, 0xbc, 0x73, 0x25, 0x35, 0xcc, 0x91, 0xee, 0xbe, 0xd6, 0x9b, 0x32, 0x9d,
	0x3e, 0x41, 0xac, 0x40, 0x51, 0x03, 0xcc, 0xed, 0x53, 0x72, 0x9c, 0x16, 0x95, 0xd0, 0x82, 0xd4,
	0xd3, 0xa2, 0x52, 0xc4, 0x24, 0xf8, 0x02, 0x6b, 0x00, 0x1b, 0x54, 0x90, 0x13, 0x44, 0xa8, 0x3d,
	0xc4, 0x46, 0xf3, 0x32, 0x3d, 0x24, 0x8f, 0x52, 0xee, 0x3b, 0xec, 0xc2, 0x25, 0x16, 0xbe, 0x80,
	0xa3, 0x47, 0x90, 0x51, 0x7e, 0x97, 0xc2, 0xf1, 0x71, 0x0e, 0x68, 0xb7, 0x4f, 0xb9, 0x20, 0x8d,
	0xb4, 0x43, 0xc9, 0xa2, 0x09, 0x6e, 0x2c, 0xaf, 0x1e, 0xdf, 0x00, 0x39, 0x16, 0xe4, 0x34, 0x6d,
	0x74, 0x22, 0x97, 0xe3, 0x58, 0xfa, 0x7d, 0xeb, 0xdf, 0x2c, 0x94, 0x36, 0xaf, 0x00, 0xcb, 0x50,
	0x10, 0x23, 0xdb, 0xa6, 0x42, 0x90, 0x3d, 0x7d, 0xd7, 0xcc, 0x69, 0x66, 0x74, 0xe1, 0x23, 0x76,
	0xc5, 0xdc, 0x6b, 0x9f, 0x72, 0xee, 0x72, 0x92, 0xc5, 0x63, 0x38, 0xb4, 0x07, 0xd4, 0xbe, 0xf2,
	0xc5, 0x68, 0x98, 0x80, 0xfb, 0xfa, 0x60, 0x46, 0x6c, 0xd8, 0xe5, 0x62, 0x10, 0xf7, 0xda, 0xef,
	0xb9, 0xfd, 0xf7, 0x09, 0x9b, 0xd3, 0x5d, 0xb0, 0x5d, 0xc6, 0xa8, 0xad, 0xcf, 0xfe, 0x62, 0x24,
	0x28, 0x39, 0x78, 0x7e, 0x89, 0x13, 0x75, 0x1e, 0x5f, 0xc2, 0xf1, 0x16, 0xca, 0x5c, 0x49, 0xc7,
	0x8e, 0x90, 0xa4, 0xa0, 0x77, 0x7e, 0xa8, 0x2d, 0x56, 0x17, 0xb1, 0x05, 0xaf, 0xbf, 0x7a, 0x47,
	0x63, 0x4d, 0x29, 0x7d, 0x03, 0x4f, 0xae, 0x54, 0xcc, 0x02, 0xfe, 0x00, 0xaf, 0x76, 0xb0, 0xcc,
	0x95, 0xbe, 0xd7, 0x15, 0x82, 0x94, 0x5b, 0x6b, 0x28, 0x7a, 0x4a, 0x45, 0xfa, 0x41, 0x63, 0x0d,
	0xb2, 0xb3, 0x69, 0x32, 0x10, 0xb3, 0xb3, 0xa9, 0x7e, 0xfa, 0xc1, 0x74, 0x6a, 0x46, 0x45, 0x3c,
	0x0d, 0xd3, 0xd0, 0x30, 0x93, 0x49, 0x78, 0xbf, 0x58, 0x27, 0x23, 0x31, 0x0d, 0xf1, 0x47, 0xc8,
	0x2d, 0x95, 0x8a, 0xac, 0x5c, 0x73, 0xbf, 0x5d, 0xee, 0x90, 0x74, 0x3c, 0xa5, 0x7b, 0x70, 0xc3,
	0x76, 0x3c, 0x80, 0x65, 0x67, 0x29, 0x54, 0xf4, 0x79, 0x36, 0x51, 0xd8, 0x83, 0x9a, 0x50, 0x8b,
	0xa9, 0xd7, 0x59, 0xa6, 0xdf, 0x88, 0xfa, 0xae, 0xb1, 0xd6, 0xd8, 0x89, 0xb6, 0xf6, 0xda, 0x99,
	0x9f, 0x33, 0xbd, 0xf6, 0x1f, 0x6f, 0x6e, 0x67, 0xeb, 0xbb, 0xfb, 0x9b, 0xb3, 0x49, 0x38, 0x3f,
	0xff, 0x4b, 0x0b, 0x26, 0x77, 0xc1, 0x6c, 0x91, 0xfc, 0x0d, 0x23, 0x75, 0x1e, 0x9b, 0x6f, 0xe2,
	0x0f, 0xd3, 0x2f, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xf2, 0x31, 0x64, 0xb7, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// P2PServiceClient is the client API for P2PService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type P2PServiceClient interface {
	SendP2PMessage(ctx context.Context, opts ...grpc.CallOption) (P2PService_SendP2PMessageClient, error)
}

type p2PServiceClient struct {
	cc *grpc.ClientConn
}

func NewP2PServiceClient(cc *grpc.ClientConn) P2PServiceClient {
	return &p2PServiceClient{cc}
}

func (c *p2PServiceClient) SendP2PMessage(ctx context.Context, opts ...grpc.CallOption) (P2PService_SendP2PMessageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_P2PService_serviceDesc.Streams[0], "/protos.p2pService/SendP2pMessage", opts...)
	if err != nil {
		return nil, err
	}
	x := &p2PServiceSendP2PMessageClient{stream}
	return x, nil
}

type P2PService_SendP2PMessageClient interface {
	Send(*XuperMessage) error
	Recv() (*XuperMessage, error)
	grpc.ClientStream
}

type p2PServiceSendP2PMessageClient struct {
	grpc.ClientStream
}

func (x *p2PServiceSendP2PMessageClient) Send(m *XuperMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *p2PServiceSendP2PMessageClient) Recv() (*XuperMessage, error) {
	m := new(XuperMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// P2PServiceServer is the server API for P2PService service.
type P2PServiceServer interface {
	SendP2PMessage(P2PService_SendP2PMessageServer) error
}

// UnimplementedP2PServiceServer can be embedded to have forward compatible implementations.
type UnimplementedP2PServiceServer struct {
}

func (*UnimplementedP2PServiceServer) SendP2PMessage(srv P2PService_SendP2PMessageServer) error {
	return status.Errorf(codes.Unimplemented, "method SendP2PMessage not implemented")
}

func RegisterP2PServiceServer(s *grpc.Server, srv P2PServiceServer) {
	s.RegisterService(&_P2PService_serviceDesc, srv)
}

func _P2PService_SendP2PMessage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(P2PServiceServer).SendP2PMessage(&p2PServiceSendP2PMessageServer{stream})
}

type P2PService_SendP2PMessageServer interface {
	Send(*XuperMessage) error
	Recv() (*XuperMessage, error)
	grpc.ServerStream
}

type p2PServiceSendP2PMessageServer struct {
	grpc.ServerStream
}

func (x *p2PServiceSendP2PMessageServer) Send(m *XuperMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *p2PServiceSendP2PMessageServer) Recv() (*XuperMessage, error) {
	m := new(XuperMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _P2PService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.p2pService",
	HandlerType: (*P2PServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendP2pMessage",
			Handler:       _P2PService_SendP2PMessage_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/network.proto",
}
