// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xrandom.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 添加节点请求
type AddNodeRequest struct {
	// 节点地址
	NodeAddress string `protobuf:"bytes,1,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	// 节点公钥
	NodePublicKey        string   `protobuf:"bytes,2,opt,name=node_public_key,json=nodePublicKey,proto3" json:"node_public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeRequest) Reset()         { *m = AddNodeRequest{} }
func (m *AddNodeRequest) String() string { return proto.CompactTextString(m) }
func (*AddNodeRequest) ProtoMessage()    {}
func (*AddNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{0}
}

func (m *AddNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeRequest.Unmarshal(m, b)
}
func (m *AddNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeRequest.Marshal(b, m, deterministic)
}
func (m *AddNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeRequest.Merge(m, src)
}
func (m *AddNodeRequest) XXX_Size() int {
	return xxx_messageInfo_AddNodeRequest.Size(m)
}
func (m *AddNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeRequest proto.InternalMessageInfo

func (m *AddNodeRequest) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *AddNodeRequest) GetNodePublicKey() string {
	if m != nil {
		return m.NodePublicKey
	}
	return ""
}

// 添加节点响应
type AddNodeResponse struct {
	// 添加成功标志
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 错误信息（如果发生错误）
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 错误代码
	ErrorCode            int32    `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNodeResponse) Reset()         { *m = AddNodeResponse{} }
func (m *AddNodeResponse) String() string { return proto.CompactTextString(m) }
func (*AddNodeResponse) ProtoMessage()    {}
func (*AddNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{1}
}

func (m *AddNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeResponse.Unmarshal(m, b)
}
func (m *AddNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeResponse.Marshal(b, m, deterministic)
}
func (m *AddNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeResponse.Merge(m, src)
}
func (m *AddNodeResponse) XXX_Size() int {
	return xxx_messageInfo_AddNodeResponse.Size(m)
}
func (m *AddNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeResponse proto.InternalMessageInfo

func (m *AddNodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddNodeResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *AddNodeResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 删除节点请求
type DeleteNodeRequest struct {
	// 节点公钥
	NodePublicKey        string   `protobuf:"bytes,1,opt,name=node_public_key,json=nodePublicKey,proto3" json:"node_public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeRequest) Reset()         { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()    {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{2}
}

func (m *DeleteNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeRequest.Unmarshal(m, b)
}
func (m *DeleteNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeRequest.Merge(m, src)
}
func (m *DeleteNodeRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeRequest.Size(m)
}
func (m *DeleteNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeRequest proto.InternalMessageInfo

func (m *DeleteNodeRequest) GetNodePublicKey() string {
	if m != nil {
		return m.NodePublicKey
	}
	return ""
}

// 删除节点响应
type DeleteNodeResponse struct {
	// 删除成功标志
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 错误信息（如果发生错误）
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 错误代码
	ErrorCode            int32    `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNodeResponse) Reset()         { *m = DeleteNodeResponse{} }
func (m *DeleteNodeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNodeResponse) ProtoMessage()    {}
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{3}
}

func (m *DeleteNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNodeResponse.Unmarshal(m, b)
}
func (m *DeleteNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNodeResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNodeResponse.Merge(m, src)
}
func (m *DeleteNodeResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNodeResponse.Size(m)
}
func (m *DeleteNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNodeResponse proto.InternalMessageInfo

func (m *DeleteNodeResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeleteNodeResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *DeleteNodeResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 提交随机数请求
type SubmitRandomNumberRequest struct {
	// 随机数
	RandomNumber string `protobuf:"bytes,1,opt,name=random_number,json=randomNumber,proto3" json:"random_number,omitempty"`
	// 高度
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 证明
	Proof                *Proof   `protobuf:"bytes,3,opt,name=proof,proto3" json:"proof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRandomNumberRequest) Reset()         { *m = SubmitRandomNumberRequest{} }
func (m *SubmitRandomNumberRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitRandomNumberRequest) ProtoMessage()    {}
func (*SubmitRandomNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{4}
}

func (m *SubmitRandomNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRandomNumberRequest.Unmarshal(m, b)
}
func (m *SubmitRandomNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRandomNumberRequest.Marshal(b, m, deterministic)
}
func (m *SubmitRandomNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRandomNumberRequest.Merge(m, src)
}
func (m *SubmitRandomNumberRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitRandomNumberRequest.Size(m)
}
func (m *SubmitRandomNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRandomNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRandomNumberRequest proto.InternalMessageInfo

func (m *SubmitRandomNumberRequest) GetRandomNumber() string {
	if m != nil {
		return m.RandomNumber
	}
	return ""
}

func (m *SubmitRandomNumberRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SubmitRandomNumberRequest) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

// 提交随机数响应
type SubmitRandomNumberResponse struct {
	// 提交成功标志
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 错误信息（如果发生错误）
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 错误代码
	ErrorCode            int32    `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRandomNumberResponse) Reset()         { *m = SubmitRandomNumberResponse{} }
func (m *SubmitRandomNumberResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitRandomNumberResponse) ProtoMessage()    {}
func (*SubmitRandomNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{5}
}

func (m *SubmitRandomNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRandomNumberResponse.Unmarshal(m, b)
}
func (m *SubmitRandomNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRandomNumberResponse.Marshal(b, m, deterministic)
}
func (m *SubmitRandomNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRandomNumberResponse.Merge(m, src)
}
func (m *SubmitRandomNumberResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitRandomNumberResponse.Size(m)
}
func (m *SubmitRandomNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRandomNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRandomNumberResponse proto.InternalMessageInfo

func (m *SubmitRandomNumberResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SubmitRandomNumberResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *SubmitRandomNumberResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

// 查询随机数请求
type QueryRandomNumberRequest struct {
	// header
	Header *Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 高度
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 节点公钥
	NodePublicKey string `protobuf:"bytes,3,opt,name=node_public_key,json=nodePublicKey,proto3" json:"node_public_key,omitempty"`
	// 签名
	Sign                 []byte   `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRandomNumberRequest) Reset()         { *m = QueryRandomNumberRequest{} }
func (m *QueryRandomNumberRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRandomNumberRequest) ProtoMessage()    {}
func (*QueryRandomNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{6}
}

func (m *QueryRandomNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRandomNumberRequest.Unmarshal(m, b)
}
func (m *QueryRandomNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRandomNumberRequest.Marshal(b, m, deterministic)
}
func (m *QueryRandomNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRandomNumberRequest.Merge(m, src)
}
func (m *QueryRandomNumberRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRandomNumberRequest.Size(m)
}
func (m *QueryRandomNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRandomNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRandomNumberRequest proto.InternalMessageInfo

func (m *QueryRandomNumberRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryRandomNumberRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *QueryRandomNumberRequest) GetNodePublicKey() string {
	if m != nil {
		return m.NodePublicKey
	}
	return ""
}

func (m *QueryRandomNumberRequest) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// 查询随机数响应
type QueryRandomNumberResponse struct {
	RandomNumber string `protobuf:"bytes,1,opt,name=random_number,json=randomNumber,proto3" json:"random_number,omitempty"`
	// 证明
	Proof *Proof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
	// 错误信息（如果发生错误）
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// 错误代码
	ErrorCode int32 `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// 消息签名：对随机数进行签名，用于执行层公钥校验
	Sign                 []byte   `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRandomNumberResponse) Reset()         { *m = QueryRandomNumberResponse{} }
func (m *QueryRandomNumberResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRandomNumberResponse) ProtoMessage()    {}
func (*QueryRandomNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{7}
}

func (m *QueryRandomNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRandomNumberResponse.Unmarshal(m, b)
}
func (m *QueryRandomNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRandomNumberResponse.Marshal(b, m, deterministic)
}
func (m *QueryRandomNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRandomNumberResponse.Merge(m, src)
}
func (m *QueryRandomNumberResponse) XXX_Size() int {
	return xxx_messageInfo_QueryRandomNumberResponse.Size(m)
}
func (m *QueryRandomNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRandomNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRandomNumberResponse proto.InternalMessageInfo

func (m *QueryRandomNumberResponse) GetRandomNumber() string {
	if m != nil {
		return m.RandomNumber
	}
	return ""
}

func (m *QueryRandomNumberResponse) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

func (m *QueryRandomNumberResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *QueryRandomNumberResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *QueryRandomNumberResponse) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// 证明
type Proof struct {
	// 消息
	Message []byte `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// 参与签名的公钥和
	PartPublicKeySum []byte `protobuf:"bytes,2,opt,name=part_public_key_sum,json=partPublicKeySum,proto3" json:"part_public_key_sum,omitempty"`
	// 编号列表
	Indexes []string `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	// Group 组合公钥
	PPrime               []byte   `protobuf:"bytes,4,opt,name=p_prime,json=pPrime,proto3" json:"p_prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proof) Reset()         { *m = Proof{} }
func (m *Proof) String() string { return proto.CompactTextString(m) }
func (*Proof) ProtoMessage()    {}
func (*Proof) Descriptor() ([]byte, []int) {
	return fileDescriptor_704d716464e4381f, []int{8}
}

func (m *Proof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proof.Unmarshal(m, b)
}
func (m *Proof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proof.Marshal(b, m, deterministic)
}
func (m *Proof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proof.Merge(m, src)
}
func (m *Proof) XXX_Size() int {
	return xxx_messageInfo_Proof.Size(m)
}
func (m *Proof) XXX_DiscardUnknown() {
	xxx_messageInfo_Proof.DiscardUnknown(m)
}

var xxx_messageInfo_Proof proto.InternalMessageInfo

func (m *Proof) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Proof) GetPartPublicKeySum() []byte {
	if m != nil {
		return m.PartPublicKeySum
	}
	return nil
}

func (m *Proof) GetIndexes() []string {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *Proof) GetPPrime() []byte {
	if m != nil {
		return m.PPrime
	}
	return nil
}

func init() {
	proto.RegisterType((*AddNodeRequest)(nil), "pb.AddNodeRequest")
	proto.RegisterType((*AddNodeResponse)(nil), "pb.AddNodeResponse")
	proto.RegisterType((*DeleteNodeRequest)(nil), "pb.DeleteNodeRequest")
	proto.RegisterType((*DeleteNodeResponse)(nil), "pb.DeleteNodeResponse")
	proto.RegisterType((*SubmitRandomNumberRequest)(nil), "pb.SubmitRandomNumberRequest")
	proto.RegisterType((*SubmitRandomNumberResponse)(nil), "pb.SubmitRandomNumberResponse")
	proto.RegisterType((*QueryRandomNumberRequest)(nil), "pb.QueryRandomNumberRequest")
	proto.RegisterType((*QueryRandomNumberResponse)(nil), "pb.QueryRandomNumberResponse")
	proto.RegisterType((*Proof)(nil), "pb.Proof")
}

func init() { proto.RegisterFile("xrandom.proto", fileDescriptor_704d716464e4381f) }

var fileDescriptor_704d716464e4381f = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xf9, 0x2b, 0x99, 0x38, 0x94, 0x4e, 0x45, 0x71, 0x2d, 0x02, 0xc1, 0x95, 0x50, 0x2e,
	0xe4, 0x10, 0xb8, 0x21, 0x0e, 0x15, 0x1c, 0x90, 0x10, 0x55, 0xd8, 0x8a, 0x13, 0x07, 0xcb, 0xce,
	0x0e, 0x89, 0x45, 0xed, 0x35, 0xbb, 0xb6, 0x94, 0x70, 0xe5, 0x0d, 0x78, 0x0a, 0x5e, 0x81, 0xb7,
	0x43, 0xbb, 0xfe, 0x21, 0x6d, 0x1c, 0xc1, 0xa9, 0x37, 0xcf, 0xb7, 0xb3, 0xdf, 0x7c, 0xf3, 0xcd,
	0x8e, 0x61, 0xb8, 0x96, 0x41, 0xc2, 0x45, 0x3c, 0x4d, 0xa5, 0xc8, 0x04, 0xb6, 0xd2, 0xd0, 0xb5,
	0xd7, 0x8b, 0x55, 0x10, 0x25, 0x05, 0xe2, 0x7d, 0x86, 0x7b, 0xe7, 0x9c, 0x5f, 0x08, 0x4e, 0x8c,
	0xbe, 0xe5, 0xa4, 0x32, 0x7c, 0x0a, 0x76, 0x22, 0x38, 0xf9, 0x01, 0xe7, 0x92, 0x94, 0x72, 0xac,
	0xb1, 0x35, 0xe9, 0xb3, 0x81, 0xc6, 0xce, 0x0b, 0x08, 0x9f, 0xc1, 0xa1, 0x49, 0x49, 0xf3, 0xf0,
	0x2a, 0x5a, 0xf8, 0x5f, 0x69, 0xe3, 0xb4, 0x4c, 0xd6, 0x50, 0xc3, 0x73, 0x83, 0xbe, 0xa7, 0x8d,
	0x27, 0xe0, 0xb0, 0x26, 0x57, 0xa9, 0x48, 0x14, 0xa1, 0x03, 0x07, 0x2a, 0x5f, 0x2c, 0x2a, 0xe2,
	0xbb, 0xac, 0x0a, 0xf1, 0x0c, 0x86, 0x24, 0xa5, 0x90, 0x7e, 0x4c, 0x4a, 0x05, 0x4b, 0x2a, 0x29,
	0x6d, 0x03, 0x7e, 0x28, 0x30, 0x1c, 0x01, 0x14, 0x49, 0x0b, 0xc1, 0xc9, 0x69, 0x8f, 0xad, 0x49,
	0x97, 0xf5, 0x0d, 0xf2, 0x46, 0x70, 0xf2, 0x5e, 0xc1, 0xd1, 0x5b, 0xba, 0xa2, 0x8c, 0xb6, 0x1b,
	0x6a, 0x50, 0x6b, 0x35, 0xa9, 0x95, 0x80, 0xdb, 0x97, 0x6f, 0x45, 0xf0, 0x06, 0x4e, 0x2f, 0xf3,
	0x30, 0x8e, 0x32, 0x66, 0xc6, 0x74, 0x91, 0xc7, 0x21, 0xc9, 0x4a, 0xf8, 0x19, 0x0c, 0x8b, 0xe9,
	0xf9, 0x89, 0xc1, 0x4b, 0xd9, 0xb6, 0xdc, 0xca, 0xc5, 0x13, 0xe8, 0xad, 0x28, 0x5a, 0xae, 0x32,
	0x53, 0xbe, 0xc3, 0xca, 0x08, 0x9f, 0x40, 0x37, 0x95, 0x42, 0x7c, 0x31, 0x35, 0x07, 0xb3, 0xfe,
	0x34, 0x0d, 0xa7, 0x73, 0x0d, 0xb0, 0x02, 0xf7, 0xbe, 0x83, 0xdb, 0x54, 0xfa, 0x56, 0xda, 0xfe,
	0x69, 0x81, 0xf3, 0x31, 0x27, 0xb9, 0x69, 0x6a, 0xdb, 0xd3, 0x1d, 0x05, 0xbc, 0xec, 0x77, 0x30,
	0x03, 0x2d, 0xfd, 0x9d, 0x41, 0x58, 0x79, 0xb2, 0xb7, 0xeb, 0x86, 0x59, 0xb7, 0x1b, 0x66, 0x8d,
	0x08, 0x1d, 0x15, 0x2d, 0x13, 0xa7, 0x33, 0xb6, 0x26, 0x36, 0x33, 0xdf, 0xde, 0x6f, 0x0b, 0x4e,
	0x1b, 0x44, 0x95, 0x86, 0xfc, 0xd7, 0x30, 0x6a, 0xd3, 0x5b, 0xcd, 0xa6, 0xef, 0x9a, 0xd7, 0xfe,
	0xa7, 0x79, 0x9d, 0x1b, 0xe6, 0xd5, 0xda, 0xbb, 0x5b, 0xda, 0x7f, 0x58, 0xd0, 0x35, 0x85, 0xf4,
	0xe0, 0x2a, 0x6e, 0xcb, 0x24, 0x54, 0x21, 0x3e, 0x87, 0xe3, 0x34, 0x90, 0xd9, 0x96, 0x37, 0xbe,
	0xca, 0x63, 0x23, 0xd5, 0x66, 0xf7, 0xf5, 0x51, 0xed, 0xcf, 0x65, 0x1e, 0x6b, 0xa2, 0x28, 0xe1,
	0xb4, 0x26, 0xe5, 0xb4, 0xc7, 0xed, 0x49, 0x9f, 0x55, 0x21, 0x3e, 0x84, 0x83, 0xd4, 0x4f, 0x65,
	0x14, 0x53, 0xe9, 0x5f, 0x2f, 0x9d, 0xeb, 0x68, 0xf6, 0xab, 0x05, 0xbd, 0xc2, 0x3c, 0x7c, 0x09,
	0x07, 0xe5, 0xea, 0x23, 0x6a, 0x17, 0xae, 0xff, 0x64, 0xdc, 0xe3, 0x6b, 0x58, 0x61, 0xb1, 0x77,
	0x07, 0x5f, 0x03, 0xfc, 0x5d, 0x41, 0x7c, 0xa0, 0x93, 0x76, 0xf6, 0xd9, 0x3d, 0xb9, 0x09, 0xd7,
	0xd7, 0x3f, 0x01, 0xee, 0x3e, 0x69, 0x1c, 0xe9, 0xfc, 0xbd, 0x5b, 0xe6, 0x3e, 0xde, 0x77, 0x5c,
	0xd3, 0x32, 0x38, 0xda, 0x79, 0x17, 0xf8, 0x48, 0x5f, 0xdb, 0xf7, 0x86, 0xdd, 0xd1, 0x9e, 0xd3,
	0x8a, 0x33, 0xec, 0x99, 0xdf, 0xef, 0x8b, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x72, 0x67, 0x6f,
	0x5a, 0xa1, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RandomClient is the client API for Random service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RandomClient interface {
	// 管理节点
	AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error)
	DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error)
	// 提交新随机数
	SubmitRandomNumber(ctx context.Context, in *SubmitRandomNumberRequest, opts ...grpc.CallOption) (*SubmitRandomNumberResponse, error)
	// 查询随机数（限高度）
	QueryRandomNumber(ctx context.Context, in *QueryRandomNumberRequest, opts ...grpc.CallOption) (*QueryRandomNumberResponse, error)
}

type randomClient struct {
	cc grpc.ClientConnInterface
}

func NewRandomClient(cc grpc.ClientConnInterface) RandomClient {
	return &randomClient{cc}
}

func (c *randomClient) AddNode(ctx context.Context, in *AddNodeRequest, opts ...grpc.CallOption) (*AddNodeResponse, error) {
	out := new(AddNodeResponse)
	err := c.cc.Invoke(ctx, "/pb.Random/AddNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *randomClient) DeleteNode(ctx context.Context, in *DeleteNodeRequest, opts ...grpc.CallOption) (*DeleteNodeResponse, error) {
	out := new(DeleteNodeResponse)
	err := c.cc.Invoke(ctx, "/pb.Random/DeleteNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *randomClient) SubmitRandomNumber(ctx context.Context, in *SubmitRandomNumberRequest, opts ...grpc.CallOption) (*SubmitRandomNumberResponse, error) {
	out := new(SubmitRandomNumberResponse)
	err := c.cc.Invoke(ctx, "/pb.Random/SubmitRandomNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *randomClient) QueryRandomNumber(ctx context.Context, in *QueryRandomNumberRequest, opts ...grpc.CallOption) (*QueryRandomNumberResponse, error) {
	out := new(QueryRandomNumberResponse)
	err := c.cc.Invoke(ctx, "/pb.Random/QueryRandomNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RandomServer is the server API for Random service.
type RandomServer interface {
	// 管理节点
	AddNode(context.Context, *AddNodeRequest) (*AddNodeResponse, error)
	DeleteNode(context.Context, *DeleteNodeRequest) (*DeleteNodeResponse, error)
	// 提交新随机数
	SubmitRandomNumber(context.Context, *SubmitRandomNumberRequest) (*SubmitRandomNumberResponse, error)
	// 查询随机数（限高度）
	QueryRandomNumber(context.Context, *QueryRandomNumberRequest) (*QueryRandomNumberResponse, error)
}

// UnimplementedRandomServer can be embedded to have forward compatible implementations.
type UnimplementedRandomServer struct {
}

func (*UnimplementedRandomServer) AddNode(ctx context.Context, req *AddNodeRequest) (*AddNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNode not implemented")
}
func (*UnimplementedRandomServer) DeleteNode(ctx context.Context, req *DeleteNodeRequest) (*DeleteNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNode not implemented")
}
func (*UnimplementedRandomServer) SubmitRandomNumber(ctx context.Context, req *SubmitRandomNumberRequest) (*SubmitRandomNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitRandomNumber not implemented")
}
func (*UnimplementedRandomServer) QueryRandomNumber(ctx context.Context, req *QueryRandomNumberRequest) (*QueryRandomNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRandomNumber not implemented")
}

func RegisterRandomServer(s *grpc.Server, srv RandomServer) {
	s.RegisterService(&_Random_serviceDesc, srv)
}

func _Random_AddNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServer).AddNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Random/AddNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServer).AddNode(ctx, req.(*AddNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Random_DeleteNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServer).DeleteNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Random/DeleteNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServer).DeleteNode(ctx, req.(*DeleteNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Random_SubmitRandomNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitRandomNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServer).SubmitRandomNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Random/SubmitRandomNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServer).SubmitRandomNumber(ctx, req.(*SubmitRandomNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Random_QueryRandomNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRandomNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServer).QueryRandomNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Random/QueryRandomNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServer).QueryRandomNumber(ctx, req.(*QueryRandomNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Random_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Random",
	HandlerType: (*RandomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNode",
			Handler:    _Random_AddNode_Handler,
		},
		{
			MethodName: "DeleteNode",
			Handler:    _Random_DeleteNode_Handler,
		},
		{
			MethodName: "SubmitRandomNumber",
			Handler:    _Random_SubmitRandomNumber_Handler,
		},
		{
			MethodName: "QueryRandomNumber",
			Handler:    _Random_QueryRandomNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xrandom.proto",
}
