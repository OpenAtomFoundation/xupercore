// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xchain.proto

package xchainpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"  //nolint:staticcheck
	xldgpb "github.com/xuperchain/xupercore/bcs/ledger/xledger/xldgpb"
	protos "github.com/xuperchain/xupercore/protos"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 通用请求Header
type ReqHeader struct {
	// 请求id
	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 标记请求方，方便问题定位
	SelfName             string   `protobuf:"bytes,2,opt,name=self_name,json=selfName,proto3" json:"self_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqHeader) Reset()         { *m = ReqHeader{} }
func (m *ReqHeader) String() string { return proto.CompactTextString(m) }
func (*ReqHeader) ProtoMessage()    {}
func (*ReqHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{0}
}

func (m *ReqHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqHeader.Unmarshal(m, b)
}
func (m *ReqHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqHeader.Marshal(b, m, deterministic)
}
func (m *ReqHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqHeader.Merge(m, src)
}
func (m *ReqHeader) XXX_Size() int {
	return xxx_messageInfo_ReqHeader.Size(m)
}
func (m *ReqHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ReqHeader proto.InternalMessageInfo

func (m *ReqHeader) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *ReqHeader) GetSelfName() string {
	if m != nil {
		return m.SelfName
	}
	return ""
}

// 通用响应Header
type RespHeader struct {
	// 请求id
	LogId string `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	// 错误码
	ErrCode int64 `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	// 错误信息
	ErrMsg string `protobuf:"bytes,3,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	// 节点追踪信息，方便问题定位
	TraceId              string   `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespHeader) Reset()         { *m = RespHeader{} }
func (m *RespHeader) String() string { return proto.CompactTextString(m) }
func (*RespHeader) ProtoMessage()    {}
func (*RespHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{1}
}

func (m *RespHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespHeader.Unmarshal(m, b)
}
func (m *RespHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespHeader.Marshal(b, m, deterministic)
}
func (m *RespHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespHeader.Merge(m, src)
}
func (m *RespHeader) XXX_Size() int {
	return xxx_messageInfo_RespHeader.Size(m)
}
func (m *RespHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RespHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RespHeader proto.InternalMessageInfo

func (m *RespHeader) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *RespHeader) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *RespHeader) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *RespHeader) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type BaseReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BaseReq) Reset()         { *m = BaseReq{} }
func (m *BaseReq) String() string { return proto.CompactTextString(m) }
func (*BaseReq) ProtoMessage()    {}
func (*BaseReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{2}
}

func (m *BaseReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseReq.Unmarshal(m, b)
}
func (m *BaseReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseReq.Marshal(b, m, deterministic)
}
func (m *BaseReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseReq.Merge(m, src)
}
func (m *BaseReq) XXX_Size() int {
	return xxx_messageInfo_BaseReq.Size(m)
}
func (m *BaseReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseReq.DiscardUnknown(m)
}

var xxx_messageInfo_BaseReq proto.InternalMessageInfo

func (m *BaseReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type BaseResp struct {
	Header               *RespHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BaseResp) Reset()         { *m = BaseResp{} }
func (m *BaseResp) String() string { return proto.CompactTextString(m) }
func (*BaseResp) ProtoMessage()    {}
func (*BaseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{3}
}

func (m *BaseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseResp.Unmarshal(m, b)
}
func (m *BaseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseResp.Marshal(b, m, deterministic)
}
func (m *BaseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseResp.Merge(m, src)
}
func (m *BaseResp) XXX_Size() int {
	return xxx_messageInfo_BaseResp.Size(m)
}
func (m *BaseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseResp.DiscardUnknown(m)
}

var xxx_messageInfo_BaseResp proto.InternalMessageInfo

func (m *BaseResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type SubmitTxReq struct {
	Header               *ReqHeader          `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string              `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Txid                 []byte              `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx                   *xldgpb.Transaction `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubmitTxReq) Reset()         { *m = SubmitTxReq{} }
func (m *SubmitTxReq) String() string { return proto.CompactTextString(m) }
func (*SubmitTxReq) ProtoMessage()    {}
func (*SubmitTxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{4}
}

func (m *SubmitTxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTxReq.Unmarshal(m, b)
}
func (m *SubmitTxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTxReq.Marshal(b, m, deterministic)
}
func (m *SubmitTxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTxReq.Merge(m, src)
}
func (m *SubmitTxReq) XXX_Size() int {
	return xxx_messageInfo_SubmitTxReq.Size(m)
}
func (m *SubmitTxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTxReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTxReq proto.InternalMessageInfo

func (m *SubmitTxReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SubmitTxReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *SubmitTxReq) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *SubmitTxReq) GetTx() *xldgpb.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type PreExecReq struct {
	Header               *ReqHeader              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string                  `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Requests             []*protos.InvokeRequest `protobuf:"bytes,3,rep,name=requests,proto3" json:"requests,omitempty"`
	Initiator            string                  `protobuf:"bytes,4,opt,name=initiator,proto3" json:"initiator,omitempty"`
	AuthRequire          []string                `protobuf:"bytes,5,rep,name=authRequire,proto3" json:"authRequire,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PreExecReq) Reset()         { *m = PreExecReq{} }
func (m *PreExecReq) String() string { return proto.CompactTextString(m) }
func (*PreExecReq) ProtoMessage()    {}
func (*PreExecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{5}
}

func (m *PreExecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreExecReq.Unmarshal(m, b)
}
func (m *PreExecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreExecReq.Marshal(b, m, deterministic)
}
func (m *PreExecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreExecReq.Merge(m, src)
}
func (m *PreExecReq) XXX_Size() int {
	return xxx_messageInfo_PreExecReq.Size(m)
}
func (m *PreExecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PreExecReq.DiscardUnknown(m)
}

var xxx_messageInfo_PreExecReq proto.InternalMessageInfo

func (m *PreExecReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PreExecReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *PreExecReq) GetRequests() []*protos.InvokeRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *PreExecReq) GetInitiator() string {
	if m != nil {
		return m.Initiator
	}
	return ""
}

func (m *PreExecReq) GetAuthRequire() []string {
	if m != nil {
		return m.AuthRequire
	}
	return nil
}

type PreExecResp struct {
	Header               *RespHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string                 `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Response             *protos.InvokeResponse `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PreExecResp) Reset()         { *m = PreExecResp{} }
func (m *PreExecResp) String() string { return proto.CompactTextString(m) }
func (*PreExecResp) ProtoMessage()    {}
func (*PreExecResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{6}
}

func (m *PreExecResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreExecResp.Unmarshal(m, b)
}
func (m *PreExecResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreExecResp.Marshal(b, m, deterministic)
}
func (m *PreExecResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreExecResp.Merge(m, src)
}
func (m *PreExecResp) XXX_Size() int {
	return xxx_messageInfo_PreExecResp.Size(m)
}
func (m *PreExecResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PreExecResp.DiscardUnknown(m)
}

var xxx_messageInfo_PreExecResp proto.InternalMessageInfo

func (m *PreExecResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PreExecResp) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *PreExecResp) GetResponse() *protos.InvokeResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type SelectUtxoReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string     `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address              string     `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TotalNeed            string     `protobuf:"bytes,5,opt,name=totalNeed,proto3" json:"totalNeed,omitempty"`
	NeedLock             bool       `protobuf:"varint,6,opt,name=needLock,proto3" json:"needLock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SelectUtxoReq) Reset()         { *m = SelectUtxoReq{} }
func (m *SelectUtxoReq) String() string { return proto.CompactTextString(m) }
func (*SelectUtxoReq) ProtoMessage()    {}
func (*SelectUtxoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{7}
}

func (m *SelectUtxoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectUtxoReq.Unmarshal(m, b)
}
func (m *SelectUtxoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectUtxoReq.Marshal(b, m, deterministic)
}
func (m *SelectUtxoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectUtxoReq.Merge(m, src)
}
func (m *SelectUtxoReq) XXX_Size() int {
	return xxx_messageInfo_SelectUtxoReq.Size(m)
}
func (m *SelectUtxoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectUtxoReq.DiscardUnknown(m)
}

var xxx_messageInfo_SelectUtxoReq proto.InternalMessageInfo

func (m *SelectUtxoReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SelectUtxoReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *SelectUtxoReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SelectUtxoReq) GetTotalNeed() string {
	if m != nil {
		return m.TotalNeed
	}
	return ""
}

func (m *SelectUtxoReq) GetNeedLock() bool {
	if m != nil {
		return m.NeedLock
	}
	return false
}

type SelectUtxoResp struct {
	Header               *RespHeader    `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	UtxoList             []*xldgpb.Utxo `protobuf:"bytes,2,rep,name=utxoList,proto3" json:"utxoList,omitempty"`
	TotalAmount          string         `protobuf:"bytes,3,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SelectUtxoResp) Reset()         { *m = SelectUtxoResp{} }
func (m *SelectUtxoResp) String() string { return proto.CompactTextString(m) }
func (*SelectUtxoResp) ProtoMessage()    {}
func (*SelectUtxoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{8}
}

func (m *SelectUtxoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectUtxoResp.Unmarshal(m, b)
}
func (m *SelectUtxoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectUtxoResp.Marshal(b, m, deterministic)
}
func (m *SelectUtxoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectUtxoResp.Merge(m, src)
}
func (m *SelectUtxoResp) XXX_Size() int {
	return xxx_messageInfo_SelectUtxoResp.Size(m)
}
func (m *SelectUtxoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectUtxoResp.DiscardUnknown(m)
}

var xxx_messageInfo_SelectUtxoResp proto.InternalMessageInfo

func (m *SelectUtxoResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SelectUtxoResp) GetUtxoList() []*xldgpb.Utxo {
	if m != nil {
		return m.UtxoList
	}
	return nil
}

func (m *SelectUtxoResp) GetTotalAmount() string {
	if m != nil {
		return m.TotalAmount
	}
	return ""
}

type QueryTxReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string     `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Txid                 []byte     `protobuf:"bytes,3,opt,name=txid,proto3" json:"txid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryTxReq) Reset()         { *m = QueryTxReq{} }
func (m *QueryTxReq) String() string { return proto.CompactTextString(m) }
func (*QueryTxReq) ProtoMessage()    {}
func (*QueryTxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{9}
}

func (m *QueryTxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTxReq.Unmarshal(m, b)
}
func (m *QueryTxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTxReq.Marshal(b, m, deterministic)
}
func (m *QueryTxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTxReq.Merge(m, src)
}
func (m *QueryTxReq) XXX_Size() int {
	return xxx_messageInfo_QueryTxReq.Size(m)
}
func (m *QueryTxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTxReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTxReq proto.InternalMessageInfo

func (m *QueryTxReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryTxReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *QueryTxReq) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

type QueryTxResp struct {
	Header               *RespHeader              `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               xldgpb.TransactionStatus `protobuf:"varint,2,opt,name=status,proto3,enum=xldgpb.TransactionStatus" json:"status,omitempty"`
	Distance             int64                    `protobuf:"varint,3,opt,name=distance,proto3" json:"distance,omitempty"`
	Tx                   *xldgpb.Transaction      `protobuf:"bytes,4,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *QueryTxResp) Reset()         { *m = QueryTxResp{} }
func (m *QueryTxResp) String() string { return proto.CompactTextString(m) }
func (*QueryTxResp) ProtoMessage()    {}
func (*QueryTxResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{10}
}

func (m *QueryTxResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTxResp.Unmarshal(m, b)
}
func (m *QueryTxResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTxResp.Marshal(b, m, deterministic)
}
func (m *QueryTxResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTxResp.Merge(m, src)
}
func (m *QueryTxResp) XXX_Size() int {
	return xxx_messageInfo_QueryTxResp.Size(m)
}
func (m *QueryTxResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTxResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTxResp proto.InternalMessageInfo

func (m *QueryTxResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryTxResp) GetStatus() xldgpb.TransactionStatus {
	if m != nil {
		return m.Status
	}
	return xldgpb.TransactionStatus_TX_UNDEFINE
}

func (m *QueryTxResp) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *QueryTxResp) GetTx() *xldgpb.Transaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

type QueryBlockReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string     `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	BlockId              []byte     `protobuf:"bytes,3,opt,name=blockId,proto3" json:"blockId,omitempty"`
	NeedContent          bool       `protobuf:"varint,4,opt,name=needContent,proto3" json:"needContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryBlockReq) Reset()         { *m = QueryBlockReq{} }
func (m *QueryBlockReq) String() string { return proto.CompactTextString(m) }
func (*QueryBlockReq) ProtoMessage()    {}
func (*QueryBlockReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{11}
}

func (m *QueryBlockReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBlockReq.Unmarshal(m, b)
}
func (m *QueryBlockReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBlockReq.Marshal(b, m, deterministic)
}
func (m *QueryBlockReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBlockReq.Merge(m, src)
}
func (m *QueryBlockReq) XXX_Size() int {
	return xxx_messageInfo_QueryBlockReq.Size(m)
}
func (m *QueryBlockReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBlockReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBlockReq proto.InternalMessageInfo

func (m *QueryBlockReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryBlockReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *QueryBlockReq) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *QueryBlockReq) GetNeedContent() bool {
	if m != nil {
		return m.NeedContent
	}
	return false
}

type QueryBlockResp struct {
	Header               *RespHeader           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status               xldgpb.BlockStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=xldgpb.BlockStatus" json:"status,omitempty"`
	Block                *xldgpb.InternalBlock `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *QueryBlockResp) Reset()         { *m = QueryBlockResp{} }
func (m *QueryBlockResp) String() string { return proto.CompactTextString(m) }
func (*QueryBlockResp) ProtoMessage()    {}
func (*QueryBlockResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{12}
}

func (m *QueryBlockResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryBlockResp.Unmarshal(m, b)
}
func (m *QueryBlockResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryBlockResp.Marshal(b, m, deterministic)
}
func (m *QueryBlockResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryBlockResp.Merge(m, src)
}
func (m *QueryBlockResp) XXX_Size() int {
	return xxx_messageInfo_QueryBlockResp.Size(m)
}
func (m *QueryBlockResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryBlockResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryBlockResp proto.InternalMessageInfo

func (m *QueryBlockResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryBlockResp) GetStatus() xldgpb.BlockStatus {
	if m != nil {
		return m.Status
	}
	return xldgpb.BlockStatus_BLOCK_ERROR
}

func (m *QueryBlockResp) GetBlock() *xldgpb.InternalBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

type QueryChainStatusReq struct {
	Header               *ReqHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string     `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	NeedBranchBlock      bool       `protobuf:"varint,3,opt,name=needBranchBlock,proto3" json:"needBranchBlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *QueryChainStatusReq) Reset()         { *m = QueryChainStatusReq{} }
func (m *QueryChainStatusReq) String() string { return proto.CompactTextString(m) }
func (*QueryChainStatusReq) ProtoMessage()    {}
func (*QueryChainStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{13}
}

func (m *QueryChainStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryChainStatusReq.Unmarshal(m, b)
}
func (m *QueryChainStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryChainStatusReq.Marshal(b, m, deterministic)
}
func (m *QueryChainStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryChainStatusReq.Merge(m, src)
}
func (m *QueryChainStatusReq) XXX_Size() int {
	return xxx_messageInfo_QueryChainStatusReq.Size(m)
}
func (m *QueryChainStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryChainStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_QueryChainStatusReq proto.InternalMessageInfo

func (m *QueryChainStatusReq) GetHeader() *ReqHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryChainStatusReq) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *QueryChainStatusReq) GetNeedBranchBlock() bool {
	if m != nil {
		return m.NeedBranchBlock
	}
	return false
}

type QueryChainStatusResp struct {
	Header               *RespHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Bcname               string             `protobuf:"bytes,2,opt,name=bcname,proto3" json:"bcname,omitempty"`
	LedgerMeta           *xldgpb.LedgerMeta `protobuf:"bytes,3,opt,name=ledgerMeta,proto3" json:"ledgerMeta,omitempty"`
	UtxoMeta             *xldgpb.UtxoMeta   `protobuf:"bytes,4,opt,name=utxoMeta,proto3" json:"utxoMeta,omitempty"`
	BranchBlockId        []string           `protobuf:"bytes,5,rep,name=branchBlockId,proto3" json:"branchBlockId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryChainStatusResp) Reset()         { *m = QueryChainStatusResp{} }
func (m *QueryChainStatusResp) String() string { return proto.CompactTextString(m) }
func (*QueryChainStatusResp) ProtoMessage()    {}
func (*QueryChainStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_db0991b9525664ca, []int{14}
}

func (m *QueryChainStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryChainStatusResp.Unmarshal(m, b)
}
func (m *QueryChainStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryChainStatusResp.Marshal(b, m, deterministic)
}
func (m *QueryChainStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryChainStatusResp.Merge(m, src)
}
func (m *QueryChainStatusResp) XXX_Size() int {
	return xxx_messageInfo_QueryChainStatusResp.Size(m)
}
func (m *QueryChainStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryChainStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryChainStatusResp proto.InternalMessageInfo

func (m *QueryChainStatusResp) GetHeader() *RespHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QueryChainStatusResp) GetBcname() string {
	if m != nil {
		return m.Bcname
	}
	return ""
}

func (m *QueryChainStatusResp) GetLedgerMeta() *xldgpb.LedgerMeta {
	if m != nil {
		return m.LedgerMeta
	}
	return nil
}

func (m *QueryChainStatusResp) GetUtxoMeta() *xldgpb.UtxoMeta {
	if m != nil {
		return m.UtxoMeta
	}
	return nil
}

func (m *QueryChainStatusResp) GetBranchBlockId() []string {
	if m != nil {
		return m.BranchBlockId
	}
	return nil
}

func init() {
	proto.RegisterType((*ReqHeader)(nil), "xchainpb.ReqHeader")
	proto.RegisterType((*RespHeader)(nil), "xchainpb.RespHeader")
	proto.RegisterType((*BaseReq)(nil), "xchainpb.BaseReq")
	proto.RegisterType((*BaseResp)(nil), "xchainpb.BaseResp")
	proto.RegisterType((*SubmitTxReq)(nil), "xchainpb.SubmitTxReq")
	proto.RegisterType((*PreExecReq)(nil), "xchainpb.PreExecReq")
	proto.RegisterType((*PreExecResp)(nil), "xchainpb.PreExecResp")
	proto.RegisterType((*SelectUtxoReq)(nil), "xchainpb.SelectUtxoReq")
	proto.RegisterType((*SelectUtxoResp)(nil), "xchainpb.SelectUtxoResp")
	proto.RegisterType((*QueryTxReq)(nil), "xchainpb.QueryTxReq")
	proto.RegisterType((*QueryTxResp)(nil), "xchainpb.QueryTxResp")
	proto.RegisterType((*QueryBlockReq)(nil), "xchainpb.QueryBlockReq")
	proto.RegisterType((*QueryBlockResp)(nil), "xchainpb.QueryBlockResp")
	proto.RegisterType((*QueryChainStatusReq)(nil), "xchainpb.QueryChainStatusReq")
	proto.RegisterType((*QueryChainStatusResp)(nil), "xchainpb.QueryChainStatusResp")
}

func init() { proto.RegisterFile("xchain.proto", fileDescriptor_db0991b9525664ca) }

var fileDescriptor_db0991b9525664ca = []byte{
	// 876 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xee, 0xc6, 0x8d, 0xbd, 0x3e, 0x4e, 0x42, 0x99, 0xd6, 0xed, 0xd6, 0xfc, 0x59, 0x0b, 0x17,
	0x96, 0x52, 0x39, 0x8a, 0x11, 0xd0, 0x3b, 0x94, 0x44, 0x48, 0x58, 0x4a, 0x2b, 0x98, 0x14, 0x89,
	0xbb, 0x68, 0xbc, 0x7b, 0xb0, 0x57, 0x59, 0xcf, 0x38, 0x33, 0xe3, 0x6a, 0xb9, 0x47, 0x42, 0x82,
	0x1b, 0x2e, 0x79, 0x04, 0xee, 0x78, 0x09, 0x24, 0x5e, 0x84, 0x07, 0x41, 0x33, 0xfb, 0x37, 0x59,
	0xd2, 0x08, 0x4b, 0xee, 0xd5, 0xee, 0xf9, 0x3f, 0xe7, 0x3b, 0x3f, 0x03, 0x7b, 0x59, 0xb4, 0x60,
	0x09, 0x1f, 0xaf, 0xa4, 0xd0, 0x82, 0xf8, 0x39, 0xb5, 0x9a, 0x0d, 0x8e, 0xb3, 0xf5, 0x0a, 0x65,
	0x24, 0x24, 0x1e, 0xcd, 0x22, 0x75, 0x94, 0x62, 0x3c, 0x47, 0x79, 0x94, 0x55, 0xdf, 0x78, 0xbe,
	0x9a, 0x95, 0x64, 0x6e, 0x3c, 0xf8, 0xa8, 0x36, 0xb1, 0x0c, 0x75, 0x14, 0x09, 0xae, 0x25, 0x8b,
	0x74, 0xae, 0x10, 0x7e, 0x09, 0x5d, 0x8a, 0xd7, 0x5f, 0x23, 0x8b, 0x51, 0x92, 0x3e, 0xb4, 0x53,
	0x31, 0xbf, 0x4c, 0xe2, 0xc0, 0x1b, 0x7a, 0xa3, 0x2e, 0xdd, 0x4d, 0xc5, 0x7c, 0x1a, 0x93, 0xf7,
	0xa0, 0xab, 0x30, 0xfd, 0xe1, 0x92, 0xb3, 0x25, 0x06, 0x3b, 0x56, 0xe2, 0x1b, 0xc6, 0x4b, 0xb6,
	0xc4, 0x50, 0x02, 0x50, 0x54, 0xab, 0xbb, 0x3d, 0x3c, 0x05, 0x1f, 0xa5, 0xbc, 0x8c, 0x44, 0x9c,
	0x3b, 0x68, 0xd1, 0x0e, 0x4a, 0x79, 0x26, 0x62, 0x24, 0x4f, 0xc0, 0xfc, 0x5e, 0x2e, 0xd5, 0x3c,
	0x68, 0x59, 0x93, 0x36, 0x4a, 0xf9, 0x42, 0xcd, 0x8d, 0x8d, 0x49, 0x14, 0x8d, 0xb3, 0xfb, 0x56,
	0xd2, 0xb1, 0xf4, 0x34, 0x0e, 0x3f, 0x87, 0xce, 0x29, 0x53, 0x48, 0xf1, 0x9a, 0x1c, 0x42, 0x7b,
	0x61, 0x43, 0xdb, 0x80, 0xbd, 0xc9, 0xc3, 0x71, 0x09, 0xd7, 0xb8, 0xaa, 0x8b, 0x16, 0x2a, 0xe1,
	0x73, 0xf0, 0x73, 0x3b, 0xb5, 0x22, 0xcf, 0x1a, 0x86, 0x8f, 0x5c, 0xc3, 0xb2, 0x9e, 0xca, 0xf2,
	0x57, 0x0f, 0x7a, 0x17, 0xeb, 0xd9, 0x32, 0xd1, 0xaf, 0xb2, 0x4d, 0xc3, 0x92, 0xc7, 0xd0, 0x9e,
	0x45, 0x0e, 0x78, 0x05, 0x45, 0x08, 0xdc, 0xd7, 0x59, 0x12, 0xdb, 0xba, 0xf7, 0xa8, 0xfd, 0x27,
	0x1f, 0xc3, 0x8e, 0xce, 0x6c, 0xbd, 0xd6, 0xa9, 0xed, 0xe9, 0xf8, 0x95, 0x64, 0x5c, 0xb1, 0x48,
	0x27, 0x82, 0xd3, 0x1d, 0x9d, 0x85, 0x7f, 0x79, 0x00, 0xdf, 0x48, 0xfc, 0x2a, 0xc3, 0x68, 0x6b,
	0xc9, 0x1c, 0x83, 0x2f, 0xf1, 0x7a, 0x8d, 0x4a, 0xab, 0xa0, 0x35, 0x6c, 0x8d, 0x7a, 0x93, 0x7e,
	0x3e, 0x22, 0x6a, 0x3c, 0xe5, 0xaf, 0xc5, 0x95, 0x41, 0xdb, 0x48, 0x69, 0xa5, 0x46, 0xde, 0x87,
	0x6e, 0xc2, 0x13, 0x9d, 0x30, 0x2d, 0x64, 0xd1, 0xa2, 0x9a, 0x41, 0x86, 0xd0, 0x63, 0x6b, 0xbd,
	0x30, 0x66, 0x89, 0xc4, 0x60, 0x77, 0xd8, 0x1a, 0x75, 0xa9, 0xcb, 0x0a, 0x7f, 0xf6, 0xa0, 0x57,
	0x95, 0xb1, 0x69, 0x4b, 0xde, 0x58, 0xc8, 0xc4, 0x14, 0xa2, 0x56, 0x82, 0x2b, 0xb4, 0xc8, 0xf6,
	0x26, 0x8f, 0x9b, 0x85, 0xe4, 0x52, 0x5a, 0xe9, 0x85, 0x7f, 0x78, 0xb0, 0x7f, 0x81, 0x29, 0x46,
	0xfa, 0x3b, 0x9d, 0x89, 0xad, 0x61, 0x1a, 0x40, 0x87, 0xc5, 0xb1, 0x44, 0xa5, 0x8a, 0xd9, 0x2e,
	0x49, 0x03, 0x9d, 0x16, 0x9a, 0xa5, 0x2f, 0x11, 0xe3, 0x60, 0x37, 0x87, 0xae, 0x62, 0x90, 0x01,
	0xf8, 0x1c, 0x31, 0x3e, 0x17, 0xd1, 0x55, 0xd0, 0x1e, 0x7a, 0x23, 0x9f, 0x56, 0x74, 0xf8, 0x8b,
	0x07, 0x07, 0x6e, 0xaa, 0x1b, 0xe3, 0x36, 0x02, 0x7f, 0xad, 0x33, 0x71, 0x9e, 0x28, 0x1d, 0xec,
	0xd8, 0x46, 0xef, 0x95, 0x73, 0x66, 0x3d, 0x56, 0x52, 0xd3, 0x41, 0x9b, 0xd3, 0xc9, 0x52, 0xac,
	0xb9, 0x2e, 0x4a, 0x70, 0x59, 0x21, 0x02, 0x7c, 0xbb, 0x46, 0xf9, 0xe3, 0xdb, 0x5d, 0x8a, 0xf0,
	0x4f, 0x0f, 0x7a, 0x55, 0x9c, 0x8d, 0x0b, 0x3e, 0x86, 0xb6, 0xd2, 0x4c, 0xaf, 0x95, 0x8d, 0x74,
	0x30, 0x79, 0x7a, 0xcb, 0x5a, 0x5d, 0x58, 0x05, 0x5a, 0x28, 0x9a, 0x06, 0xc4, 0x89, 0xd2, 0x8c,
	0x47, 0xf9, 0x0c, 0xb5, 0x68, 0x45, 0xff, 0xbf, 0x0d, 0xfd, 0xcd, 0x83, 0x7d, 0x9b, 0xf1, 0x69,
	0x2a, 0xa2, 0xab, 0x6d, 0x0e, 0xd4, 0xcc, 0x38, 0x9c, 0x96, 0xf8, 0x94, 0xa4, 0xe9, 0x95, 0x19,
	0x91, 0x33, 0xc1, 0x35, 0x72, 0x6d, 0xd3, 0xf3, 0xa9, 0xcb, 0x0a, 0x7f, 0xf7, 0xe0, 0xc0, 0x4d,
	0x69, 0x63, 0x1c, 0x0f, 0x1b, 0x38, 0x56, 0xc5, 0x5b, 0x87, 0x0d, 0x04, 0x0f, 0x61, 0xd7, 0xa6,
	0x56, 0xac, 0x60, 0xbf, 0xd4, 0x9d, 0x72, 0x8d, 0x92, 0xb3, 0x34, 0x4f, 0x22, 0xd7, 0x09, 0x7f,
	0xf2, 0xe0, 0xa1, 0x4d, 0xed, 0xcc, 0x44, 0x2f, 0x3c, 0x6d, 0x0b, 0xb3, 0x11, 0xbc, 0x63, 0x60,
	0x38, 0x95, 0x8c, 0x47, 0x8b, 0xd3, 0x2a, 0x27, 0x9f, 0x36, 0xd9, 0xe1, 0x3f, 0x1e, 0x3c, 0xfa,
	0x6f, 0x1a, 0x5b, 0x3c, 0x4c, 0x90, 0xbf, 0xcd, 0x2f, 0x50, 0xb3, 0x02, 0x17, 0x52, 0xe2, 0x72,
	0x5e, 0x49, 0xa8, 0xa3, 0x45, 0x9e, 0xe5, 0xcb, 0x6a, 0x2d, 0xf2, 0x91, 0x7b, 0xe0, 0x2e, 0xab,
	0xd5, 0xaf, 0x34, 0xc8, 0x27, 0xb0, 0x3f, 0xab, 0xeb, 0x99, 0xc6, 0xc5, 0xd1, 0xbd, 0xc9, 0x9c,
	0xfc, 0xdd, 0x82, 0xf6, 0xf7, 0x36, 0x7f, 0xf2, 0x19, 0xc0, 0xd9, 0x02, 0xa3, 0xab, 0x93, 0x34,
	0x79, 0x8d, 0xe4, 0xdd, 0xba, 0xac, 0xe2, 0x79, 0x1d, 0x90, 0x26, 0x4b, 0xad, 0xc2, 0x7b, 0xe4,
	0x0b, 0xf0, 0xcb, 0xc7, 0x90, 0xf4, 0x6b, 0x0d, 0xe7, 0x81, 0x7c, 0x83, 0xe1, 0x73, 0xe8, 0x14,
	0x07, 0x9f, 0x38, 0x18, 0xd6, 0x4f, 0xd9, 0xa0, 0x7f, 0x0b, 0xd7, 0x5a, 0x9e, 0x00, 0xd4, 0x57,
	0x8f, 0x3c, 0x71, 0x82, 0xba, 0x67, 0x7b, 0x10, 0xdc, 0x2e, 0x28, 0x83, 0x17, 0x47, 0xc4, 0x0d,
	0x5e, 0xdf, 0x2f, 0x37, 0xb8, 0x73, 0x6d, 0xf2, 0xe0, 0xf5, 0xe6, 0xb8, 0xc1, 0x6f, 0xac, 0xb8,
	0x1b, 0xfc, 0xe6, 0xa2, 0x85, 0xf7, 0xc8, 0x05, 0x3c, 0x68, 0x8e, 0x16, 0xf9, 0xa0, 0xa1, 0x7f,
	0x73, 0xfa, 0x07, 0x1f, 0xde, 0x25, 0x36, 0x4e, 0x67, 0x6d, 0xfb, 0xae, 0x7d, 0xfa, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb0, 0x44, 0x04, 0xda, 0x31, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XchainClient is the client API for Xchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XchainClient interface {
	// 示例接口
	CheckAlive(ctx context.Context, in *BaseReq, opts ...grpc.CallOption) (*BaseResp, error)
	// 提交交易
	SubmitTx(ctx context.Context, in *SubmitTxReq, opts ...grpc.CallOption) (*BaseResp, error)
	// 合约预执行
	PreExec(ctx context.Context, in *PreExecReq, opts ...grpc.CallOption) (*PreExecResp, error)
	// 选择utxo
	SelectUtxo(ctx context.Context, in *SelectUtxoReq, opts ...grpc.CallOption) (*SelectUtxoResp, error)
	// 查询交易信息
	QueryTx(ctx context.Context, in *QueryTxReq, opts ...grpc.CallOption) (*QueryTxResp, error)
	// 查询区块信息
	QueryBlock(ctx context.Context, in *QueryBlockReq, opts ...grpc.CallOption) (*QueryBlockResp, error)
	// 查询区块链状态
	QueryChainStatus(ctx context.Context, in *QueryChainStatusReq, opts ...grpc.CallOption) (*QueryChainStatusResp, error)
}

type xchainClient struct {
	cc grpc.ClientConnInterface
}

func NewXchainClient(cc grpc.ClientConnInterface) XchainClient {
	return &xchainClient{cc}
}

func (c *xchainClient) CheckAlive(ctx context.Context, in *BaseReq, opts ...grpc.CallOption) (*BaseResp, error) {
	out := new(BaseResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/CheckAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) SubmitTx(ctx context.Context, in *SubmitTxReq, opts ...grpc.CallOption) (*BaseResp, error) {
	out := new(BaseResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/SubmitTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) PreExec(ctx context.Context, in *PreExecReq, opts ...grpc.CallOption) (*PreExecResp, error) {
	out := new(PreExecResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/PreExec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) SelectUtxo(ctx context.Context, in *SelectUtxoReq, opts ...grpc.CallOption) (*SelectUtxoResp, error) {
	out := new(SelectUtxoResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/SelectUtxo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryTx(ctx context.Context, in *QueryTxReq, opts ...grpc.CallOption) (*QueryTxResp, error) {
	out := new(QueryTxResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/QueryTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryBlock(ctx context.Context, in *QueryBlockReq, opts ...grpc.CallOption) (*QueryBlockResp, error) {
	out := new(QueryBlockResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/QueryBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xchainClient) QueryChainStatus(ctx context.Context, in *QueryChainStatusReq, opts ...grpc.CallOption) (*QueryChainStatusResp, error) {
	out := new(QueryChainStatusResp)
	err := c.cc.Invoke(ctx, "/xchainpb.Xchain/QueryChainStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XchainServer is the server API for Xchain service.
type XchainServer interface {
	// 示例接口
	CheckAlive(context.Context, *BaseReq) (*BaseResp, error)
	// 提交交易
	SubmitTx(context.Context, *SubmitTxReq) (*BaseResp, error)
	// 合约预执行
	PreExec(context.Context, *PreExecReq) (*PreExecResp, error)
	// 选择utxo
	SelectUtxo(context.Context, *SelectUtxoReq) (*SelectUtxoResp, error)
	// 查询交易信息
	QueryTx(context.Context, *QueryTxReq) (*QueryTxResp, error)
	// 查询区块信息
	QueryBlock(context.Context, *QueryBlockReq) (*QueryBlockResp, error)
	// 查询区块链状态
	QueryChainStatus(context.Context, *QueryChainStatusReq) (*QueryChainStatusResp, error)
}

// UnimplementedXchainServer can be embedded to have forward compatible implementations.
type UnimplementedXchainServer struct {
}

func (*UnimplementedXchainServer) CheckAlive(ctx context.Context, req *BaseReq) (*BaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAlive not implemented")
}
func (*UnimplementedXchainServer) SubmitTx(ctx context.Context, req *SubmitTxReq) (*BaseResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTx not implemented")
}
func (*UnimplementedXchainServer) PreExec(ctx context.Context, req *PreExecReq) (*PreExecResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreExec not implemented")
}
func (*UnimplementedXchainServer) SelectUtxo(ctx context.Context, req *SelectUtxoReq) (*SelectUtxoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectUtxo not implemented")
}
func (*UnimplementedXchainServer) QueryTx(ctx context.Context, req *QueryTxReq) (*QueryTxResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTx not implemented")
}
func (*UnimplementedXchainServer) QueryBlock(ctx context.Context, req *QueryBlockReq) (*QueryBlockResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBlock not implemented")
}
func (*UnimplementedXchainServer) QueryChainStatus(ctx context.Context, req *QueryChainStatusReq) (*QueryChainStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChainStatus not implemented")
}

func RegisterXchainServer(s *grpc.Server, srv XchainServer) {
	s.RegisterService(&_Xchain_serviceDesc, srv)
}

func _Xchain_CheckAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).CheckAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/CheckAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).CheckAlive(ctx, req.(*BaseReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_SubmitTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).SubmitTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/SubmitTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).SubmitTx(ctx, req.(*SubmitTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_PreExec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreExecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).PreExec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/PreExec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).PreExec(ctx, req.(*PreExecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_SelectUtxo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectUtxoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).SelectUtxo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/SelectUtxo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).SelectUtxo(ctx, req.(*SelectUtxoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/QueryTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryTx(ctx, req.(*QueryTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBlockReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/QueryBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryBlock(ctx, req.(*QueryBlockReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xchain_QueryChainStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChainStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XchainServer).QueryChainStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xchainpb.Xchain/QueryChainStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XchainServer).QueryChainStatus(ctx, req.(*QueryChainStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xchainpb.Xchain",
	HandlerType: (*XchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAlive",
			Handler:    _Xchain_CheckAlive_Handler,
		},
		{
			MethodName: "SubmitTx",
			Handler:    _Xchain_SubmitTx_Handler,
		},
		{
			MethodName: "PreExec",
			Handler:    _Xchain_PreExec_Handler,
		},
		{
			MethodName: "SelectUtxo",
			Handler:    _Xchain_SelectUtxo_Handler,
		},
		{
			MethodName: "QueryTx",
			Handler:    _Xchain_QueryTx_Handler,
		},
		{
			MethodName: "QueryBlock",
			Handler:    _Xchain_QueryBlock_Handler,
		},
		{
			MethodName: "QueryChainStatus",
			Handler:    _Xchain_QueryChainStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xchain.proto",
}
